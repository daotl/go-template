# Runs on every push/pull/commit. Will run the latest code against a series of linters.
name: Linter

on:
  push:
    branches:
      - '**'
      - '!rt**'    # ignore rapid-testing branches - can be branches such as "rt-0.0.1"
      - '!docs**'  # ignore docs branch(es) - can be branches such as "docs-0.0.1"

jobs:
  setup:
    strategy:
      matrix:
        go-version: [ 1.15.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up cache
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: go-template
          key: go-template-${{ hashFiles('go.mod') }}-${{ matrix.go-version }}

      - name: Shadow
        uses: grandcolline/golang-github-actions@v1.1.0
        with:
          run: shadow
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Must be specified without patch version: we always use the latest patch version.
          version: v1.29

          # Optional: if set to true then the action will use pre-installed Go
          # skip-go-installation: true

          # Optional: working directory, useful for mono-repos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true
