name: Linter

on:
  push:
    branches:   # not sure if this is needed
      - '*'
  pull_request:
    types: [ opened, reopened ]

jobs:
  {% raw %}pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - uses: pre-commit/action@v2.0.3{% endraw %}

  golangci-lint:
    strategy:
      matrix:
        go-version: [ {{ cookiecutter.go_version }}.x ]
        os: [ ubuntu-latest ]
{% raw %}
    runs-on: ${{ matrix.os }}
{% endraw %}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up cache
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: {{ cookiecutter.project_name }}
          key: {{ cookiecutter.project_name }}-{% raw %}${{ hashFiles('go.mod') }}-${{ matrix.go-version }}{% endraw %}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Must be specified without patch version: we always use the latest patch version.
          version: v1.42

          # If set to true then the action will use pre-installed Go
          skip-go-installation: true

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true
