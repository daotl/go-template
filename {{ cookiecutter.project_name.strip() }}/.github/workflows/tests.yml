name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [ opened, reopened ]

jobs:
  tests:
    strategy:
      matrix:
        go-version: [ {{ cookiecutter.go_version }}.x ]
        os: [ ubuntu-latest ]
{% raw %}
    runs-on: ${{ matrix.os }}
{% endraw %}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up cache
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: {{ cookiecutter.project_name.strip() }}
          key: {{ cookiecutter.project_name.strip() }}-{% raw %}${{ hashFiles('go.mod') }}-${{ matrix.go-version }}{% endraw %}

      - name: Install Go
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v2
        with:
          go-version: {% raw %}${{ matrix.go-version }}{% endraw %}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: go mod download

      - name: Test
        run: go test ./... -race -coverprofile=coverage.txt -covermode=atomic -gcflags=-l

      {%- if cookiecutter.use_codecov.lower() == 'y' -%}
      {% raw %}

      # Generate a Codecov report
      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          name: {% endraw %}{{ cookiecutter.project_name.strip() }}{% raw %} [${{ matrix.go-version }}]
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.gz
          verbose: true{% endraw %}{% endif %}
